--- src/image_gif.c.orig	2011-11-20 23:37:19.000000000 +0000
+++ src/image_gif.c	2017-12-15 00:20:10.000000000 +0000
@@ -47,11 +47,9 @@
 
   g->buf = (Buffer *)r->_buf;
   g->fp = r->_fp;
-
-  g->gif = DGifOpen(i, image_gif_read_buf);
+  g->gif = DGifOpen(i, image_gif_read_buf, NULL);
 
   if (g->gif == NULL) {
-    PrintGifError();
     LOG_ERROR("Unable to open GIF file (%s)\n", i->path);
     image_gif_destroy(i);
     return 0;
@@ -73,6 +71,7 @@
   int x, y, ofs;
   GifRecordType RecordType;
   GifPixelType *line = NULL;
+  int ExtFunction = 0;
   GifByteType *ExtData;
   SavedImage *sp;
   SavedImage temp_save;
@@ -91,7 +90,6 @@
 
   do {
     if (DGifGetRecordType(g->gif, &RecordType) == GIF_ERROR) {
-      PrintGifError();
       LOG_ERROR("Unable to read GIF file (%s)\n", i->path);
       goto err;
     }
@@ -99,7 +97,6 @@
     switch (RecordType) {
       case IMAGE_DESC_RECORD_TYPE:
         if (DGifGetImageDesc(g->gif) == GIF_ERROR) {
-          PrintGifError();
           LOG_ERROR("Unable to read GIF file (%s)\n", i->path);
           goto err;
         }
@@ -130,7 +127,6 @@
             for (x = InterlacedOffset[j]; x < i->height; x += InterlacedJumps[j]) {
               ofs = x * i->width;
               if (DGifGetLine(g->gif, line, 0) != GIF_OK) {
-                PrintGifError();
                 LOG_ERROR("Unable to read GIF file (%s)\n", i->path);
                 goto err;
               }
@@ -148,7 +144,6 @@
           ofs = 0;
           for (x = 0; x < i->height; x++) {
             if (DGifGetLine(g->gif, line, 0) != GIF_OK) {
-              PrintGifError();
               LOG_ERROR("Unable to read GIF file (%s)\n", i->path);
               goto err;
             }
@@ -166,13 +161,12 @@
         break;
 
       case EXTENSION_RECORD_TYPE:
-        if (DGifGetExtension(g->gif, &temp_save.Function, &ExtData) == GIF_ERROR) {
-          PrintGifError();
+        if (DGifGetExtension(g->gif, &ExtFunction, &ExtData) == GIF_ERROR) {
           LOG_ERROR("Image::Scale unable to read GIF file (%s)\n", i->path);
           goto err;
         }
 
-        if (temp_save.Function == 0xF9) { // transparency info
+        if (ExtFunction == 0xF9) { // transparency info
           if (ExtData[1] & 1)
             trans_index = ExtData[4];
           else
@@ -183,19 +177,17 @@
 
         while (ExtData != NULL) {
           /* Create an extension block with our data */
-          if (AddExtensionBlock(&temp_save, ExtData[0], &ExtData[1]) == GIF_ERROR) {
-            PrintGifError();
+          if (GifAddExtensionBlock(&g->gif->ExtensionBlockCount, &g->gif->ExtensionBlocks, ExtFunction, ExtData[0], &ExtData[1]) == GIF_ERROR) {
             LOG_ERROR("Unable to read GIF file (%s)\n", i->path);
             goto err;
           }
 
           if (DGifGetExtensionNext(g->gif, &ExtData) == GIF_ERROR) {
-            PrintGifError();
             LOG_ERROR("Unable to read GIF file (%s)\n", i->path);
             goto err;
           }
 
-          temp_save.Function = 0;
+          ExtFunction = 0;
         }
         break;
 
@@ -222,8 +214,7 @@
   if (i->_gif) {
     GIFData *g = (GIFData *)i->_gif;
 
-    if (DGifCloseFile(g->gif) != GIF_OK) {
-      PrintGifError();
+    if (DGifCloseFile(g->gif, NULL) != GIF_OK) {
       LOG_ERROR("Unable to close GIF file (%s)\n", i->path);
     }
 
